<?xml version='1.0' standalone='yes'?>
<PLUGIN>

<!-- sphinxsearch file - Tybio - 12/22/2012 -->

<!-- 
Required plugins
The distribution of sphinxsearch requires postgres libraries.  When I can rebuild
       sphinxsearch from source without postgres dependencies this will be removed 
-->
<FILE Name="/boot/packages/postgresql-8.4.4-i486-1sl.txz" Run="upgradepkg --install-new">
<URL>http://slackware.org.uk/slacky/slackware-13.1/database/postgresql/8.4.4/postgresql-8.4.4-i486-1sl.txz</URL>
</FILE>

<!-- Converted Deb package directly from the sphinxsearch site -->
<FILE Name="/boot/packages/sphinxsearch_2.0.6_i386.tgz" Run="upgradepkg --install-new">
<URL>http://mux.net/~tybio/plugins/sphinxsearch_2.0.6_i386.tgz</URL>
</FILE>

<!-- Terminfo package required for Screen -->
<FILE Name="/boot/packages/aaa_terminfo-5.7-noarch-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/a/aaa_terminfo-5.7-noarch-1.txz</URL>
</FILE>

<!-- uTemper package required for Screen -->
<FILE Name="/boot/packages/utempter-1.1.5-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.37/slackware/a/utempter-1.1.5-i486-1.txz</URL>
</FILE>

<!-- Screen package -->
<FILE Name="/boot/packages/screen-4.0.3-i486-1.txz" Run="upgradepkg --install-new">
<URL>http://slackware.cs.utah.edu/pub/slackware/slackware-13.1/slackware/ap/screen-4.0.3-i486-1.txz</URL>
</FILE>

<!-- htop package -->
<FILE Name="/boot/packages/htop-0.8.3-i486-3sl.txz" Run="upgradepkg --install-new">
<URL>http://repository.slacky.eu/slackware-13.1/hardware/htop/0.8.3/htop-0.8.3-i486-3sl.txz</URL>
</FILE>

<!-- Icon -->
<FILE Name="/boot/config/plugins/newznab_extras/newznab_extras.png">
<URL>http://mux.net/~tybio/plugins/newznab_extras.png</URL>
</FILE>

<!-- clean up previous install -->
<FILE Name="/tmp/newznab_extras-cleanup" Run="/usr/bin/bash">
<INLINE>
<![CDATA[
[ -d /usr/local/emhttp/plugins/newznab_extras ] && rm -f -R /usr/local/emhttp/plugins/newznab_extras
[ -f /etc/rc.d/rc.searchd ] && rm -f /etc/rc.d/rc.searchd
[ -f /etc/rc.d/rc.newznab_cron ] && rm -f /etc/rc.d/rc.newznab_cron
[ -f /boot/config/plugins/newznab_extras/plgver.txt ] && rm -f /boot/config/plugins/newznab_extras/plgver.txt
[ -f /usr/local/emhttp/plugins/newznab_extras/event/disks_mounted ] && rm -f /usr/local/emhttp/plugins/newznab_extras/event/disks_mounted
[ -f /usr/local/emhttp/plugins/newznab_extras/event/unmounting_disks ] && rm -f /usr/local/emhttp/plugins/newznab_extras/event/unmounting_disks
rm /tmp/newznab_extras-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/newznab_extras/plgver.txt">
<INLINE>
<![CDATA[
0.2
]]>
</INLINE>
</FILE>

<!-- Configuration File -->
<FILE Name="/boot/config/plugins/newznab_extras/searchd.cfg">
<INLINE>
<![CDATA[
# searchd configuration
SEARCHD_STATUS="disable"
SEARCHD_BASE=""
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.searchd" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# start|stop|restart searchd.

enable() {
	SEARCHD_STATUS=enable
	if [ ! -d $2 ]; then
		echo "ERROR: Newznab directory does not exist"
	elif [ ! -f "$NNICMD" ]; then
		echo "ERROR: Newznab not installed in configured directory"
	else
		change_settings $2
		write_config
		[ ! -f "$SPXCFG" ] && sphinx_init
		start
	fi
}

sphinx_init() {
	$NNICMD generate > /dev/null 2>&1
	$NNICMD daemon > /dev/null 2>&1
	sleep 2
	$NNICMD index full all > /dev/null 2>&1
	$NNICMD	index delta all > /dev/null 2>&1
	$NNICMD daemon --stop > /dev/null 2>&1
	sleep 2
}

disable() {
	SEARCHD_STATUS=disable
	write_config
	stop
}

change_settings() {
	SEARCHD_BASE=$1
}

start() {
	if [ "SEARCHD_STATUS" == "disable" ]; then
		echo "ERROR: Disabled, run /etc/rc.d/rc.searchd enable"
	else
		[ -f $SPXCFG ] && $NNICMD daemon > /dev/null 2>&1
	fi
}

stop() {
	[ $PID ] && $NNICMD daemon --stop > /dev/null 2>&1
}

restart() {
		[ $PID ] && $NNICMD daemon --stop > /dev/null 2>&1
		sleep 3
		$NNICMD daemon > /dev/null 2>&1
}

status() {
	[ $PID ] && echo "searchd: Running" || echo "searchd: Not Running"
	[ $PID ] && STATS=`indextool --dumpheader $SPXDIR/releases.sph 2> /dev/null | grep 'version\|total-'`
	[ $PID ] && echo -n "$STATS"
}

status_check() {
	[ $PID ] && echo -n "yes" || echo -n "no"
}

write_config() {
	echo "SEARCHD_STATUS=\"$SEARCHD_STATUS\"" > /boot/config/plugins/newznab_extras/searchd.cfg
	echo "SEARCHD_BASE=\"$SEARCHD_BASE\"" >> /boot/config/plugins/newznab_extras/searchd.cfg
}

source /boot/config/plugins/newznab_extras/searchd.cfg
NNICMD="$SEARCHD_BASE/misc/sphinx/nnindexer.php"
SPXDIR="$SEARCHD_BASE/db/sphinxdata"
SPXCFG="$SPXDIR/sphinx.conf"
[ -f "$SPXDIR/searchd.pid" ] && PID=1

case "$1" in
	'enable')
		enable $1 $2
	;;
	'disable')
		disable $1 $2
	;;
	'start')
		start
	;;
	'stop')
		stop
	;;
	'restart')
		restart
	;;
	'status')
		status
	;;
	'status_check')
		status_check
	;;
	'write_config')
		write_config
	;;	
	*)
		echo "usage $0 start|stop|restart|status|status_check|enable|disable"
esac
]]>
</INLINE>
</FILE>

<!-- Configuration File -->
<FILE Name="/boot/config/plugins/newznab_extras/newznab_cron.cfg">
<INLINE>
<![CDATA[
# searchd configuration
CRON_STATUS="disable"
CRON_BASE=""
CRON_FILE="/var/spool/cron/crontabs/root"
CRON_INT="10"
CRON_OINT="43200"
CRON_IMP="disable"
CRON_IMPDIR=""
CRON_PP="disable"
CRON_THREAD="disable"
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.newznab_cron" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/sh
# start|stop|restart searchd.

enable() {
	CRON_STATUS=enable
	if [ ! -d $2 ]; then
		echo "ERROR: Newznab directory does not exist"
	else
		change_settings $2 $3 $4 $5 $6 $7 $8 $9
		write_config
		start
	fi
}

check_file() {
	if [ ! -f /boot/config/plugins/newznab_extras/newznab_cron.sh ]; then
		wget -N http://raw.github.com/Tybio/mux/master/newznab_extras.plg -O /boot/config/plugins/newznab_extras/newznab_cron.sh --no-check-certificate > /dev/null 2>&1
		echo "Cron script downloaded"
	fi
}

disable() {
	CRON_STATUS=disable
	change_settings $2 $3 $4 $5 $6 $7 $8 $9
	write_config
	stop
}

change_settings() {
	CRON_BASE=$1
	CRON_FILE=$2
	CRON_INT=$3
	CRON_OINT=$4
	CRON_IMP=$5
	CRON_IMPDIR=$6
	CRON_PP=$7
	CRON_THREAD=$8
}

start() {
	if [ "$CRON_STATUS" == "disable" ]; then
		echo "ERROR: Disabled, run /etc/rc.d/rc.newznab_cron enable"
	else
		[ ! $CRON_INTAB ] && echo "*/$CRON_INT * * * * /boot/config/plugins/newznab_extras/newznab_cron.sh" >> $CRON_FILE
		echo "Crontab installed"
	fi
}

stop() {
	if [ ! $CRON_INTAB ]; then
		sed '/newznab/d' /var/spool/cron/crontabs/root > /tmp/crontab.tmp
		crontab /tmp/crontab.tmp
		# Removed until I can figure out the logic
		#kill -TERM -$(pgrep -o newznab_cron.sh) 
	else
		echo "Crontab not installed"
	fi
}

status() {
	[ $CRON_INTAB ] && echo "Crontab enabled" || echo "Crontab disabled"
}

status_check() {
	[ $CRON_INTAB ] && echo -n "yes" || echo -n "no"
}

write_config() {
	echo "CRON_STATUS=\"$START_STATUS\"" > /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_BASE=\"$NEWZNAB_BASE\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_FILE=\"$CRON_FILE\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_INT=\"$CRON_INIT\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_OINT=\"$CRON_OINT\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_IMP=\"$CRON_IMP\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_IMPDIR=\"$CRON_IMPDIR\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_PP=\"$CRON_PP\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	echo "CRON_THREAD=\"$CRON_THREAD\"" >> /boot/config/plugins/newznab_extras/newznab_cron.cfg
	}

source /boot/config/plugins/newznab_extras/newznab_cron.cfg
#if grep -Fxq newznab_cron.sh $CRON_FILE
#then
#	CRON_INTAB=1
#fi

grep -q newznab_cron $CRON_FILE
[[ $? -eq 0 ]] && CRON_INTAB="1"

case "$1" in
	'enable')
		enable $1 $2 $3 $4 $5 $6 $7 $8 $9
	;;
	'disable')
		disable $1 $2 $3 $4 $5 $6 $7 $8 $9
	;;
	'start')
		start
	;;
	'stop')
		stop
	;;
	'status')
		status
	;;
	'status_check')
		status_check
	;;
	'write_config')
		write_config
	;;
	'check_file')
		check_file
	;;
	*)
		echo "usage $0 start|stop|status|status_check|enable|disable"
esac
]]>
</INLINE>
</FILE>

<!-- Configuration Page -->
<FILE Name="/usr/local/emhttp/plugins/newznab_extras/newznab_extras.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="newznab_extras.png"
Version="0.2"
Author="Tybio"
Type="php"
]]>
</INLINE>
</FILE>

<!-- Setup Icon -->
<FILE Name="/usr/local/emhttp/plugins/newznab_extras/newznab_extras.png">
<LOCAL>/boot/config/plugins/newznab_extras/newznab_extras.png</LOCAL>
</FILE>

<!-- Main Plugin Page -->
<FILE Name="/usr/local/emhttp/plugins/newznab_extras/newznab_extras.php">
<INLINE>
<![CDATA[
<?PHP
$searchd_cfg = parse_ini_file( "/boot/config/plugins/newznab_extras/searchd.cfg");
$newznab_cron_cfg = parse_ini_file( "/boot/config/plugins/newznab_extras/newznab_cron.cfg");
#$newznab_cfg = parse_ini_file( "/boot/config/plugins/newznab/newznab.cfg" );
$searchd_cfg = ( file_exists("$NEWZNAB_PATH/db/sphinxdata/sphinx.conf") ) ?"1":"0";
$searchd_idx = shell_exec ( "indextool --dumpheader releases.sph 2> /dev/null | grep total-documents | cut -d\" \" -f2" );
$searchd_running = shell_exec ( "/etc/rc.d/rc.searchd status_check" );
$searchd_stats = shell_exec ( "/etc/rc.d/rc.searchd status");
$cron_inst = shell_exec ( "grep -Fxq \"newznab_cron.sh\" \"$CRON_FILE\"")
?>
<script type="text/javascript">
	function show(obj) {
		no = obj.options[obj.selectedIndex].value;
		count = obj.options.length;
		for(i=1;i<count;i++)
			document.getElementById('myDiv'+i).style.display = 'none';
			if(no>0)
				document.getElementById('myDiv'+no).style.display = 'block';
			}
</script>
<div>
	<div id="title">
		<span class="left">Configure:&#32;&emsp;</span>
		<select onchange="show(this)">
			<option value="0">Chose</option>
			<option value="1">SphinxSearch</option>
			<option value="2">NewznabCron</option>
		</select>
	</div>
</div>
<div id="myDiv1" style="display: none;">
	<div style="width: 49%; float:left">
		<div id="title">
			<span class="left">Searchd Status:&#32;
				<?if($searchd_running=="yes"):?>	
					<span class="green"><b>RUNNING</b></span>
				<?else:?>
					<span class="red"><b>NOT RUNNING</b></span>
				<?endif;?>	
			</span>
		</div>
	</div>
	<div style="width: 49%; float:right">
		<div id="title">
			<span class="left">Configuration:&#32;</span>
		</div>
		<form name="sphinxsearch_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.searchd">
			<table class="settings">
				<tr>
					<td>Enable:</td>
	       			<td><select name="arg1" size="1">
					<?=mk_option($searchd_cfg['SEARCHD_STATUS'], "disable", "No");?>
					<?=mk_option($searchd_cfg['SEARCHD_STATUS'], "enable", "Yes");?>
					</select></td>
				</tr>
				<tr>
					<td>Newznab directory:</td>
					<td><input type="text" name="arg2" maxlength="40" value="<?=$searchd_cfg['SEARCHD_BASE'];?>"></td>
				</tr>
					<td></td>
					<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</b$
				</tr>
			</table>
		</form>
	</div>
</div>
<div id="myDiv2" style="display: none;">
	<div style="width: 49%; float:left">
		<div id="title">
			<span class="left">Cron Status:&#32;
				<?if($cron_inst=="yes"):?>	
					<span class="green"><b>INSTALLED</b></span>
				<?else:?>
					<span class="red"><b>NOT INSTALLED</b></span>
				<?endif;?>	
			</span>
		</div>
	</div>
	<div style="width: 49%; float:right">
		<div id="title">
			<span class="left">Configuration:&#32;</span>
		</div>
		<form name="cron_settings" method="POST" action="/update.htm" target="progressFrame">
			<input type="hidden" name="cmd" value="/etc/rc.d/rc.newznab_cron">
			<table class="settings">
	 			<tr>
					<td>Enable:</td>
	       			<td><select name="arg1" size="1">
					<?=mk_option($newznab_cron_cfg['CRON_STATUS'], "disable", "No");?>
					<?=mk_option($newznab_cron_cfg['CRON_STATUS'], "enable", "Yes");?>
					</select></td>
				</tr>
				<tr>
					<td>Newznab directory:</td>
					<td><input type="text" name="arg2" maxlength="60" value="<?=$newznab_cron_cfg['CRON_BASE'];?>"></td>
				</tr>
				<tr>
					<td>Crontab file:</td>
					<td><input type="text" name="arg3" maxlength="60" value="<?=$newznab_cron_cfg['CRON_FILE'];?>"></td>
				</tr>
	 			<tr>
					<td>Cron Interval (1-60 minutes):</td>
					<td><input type="text" name="arg4" maxlength="2" value="<?=$newznab_cron_cfg['CRON_INT'];?>"></td>
				</tr>
	 			<tr>
					<td>Opt Seconds:</td>
					<td><input type="text" name="arg5" maxlength="6" value="<?=$newznab_cron_cfg['CRON_OINT'];?>"></td>
				</tr>
	 			<tr>
					<td>Import NZBs:</td>
	       			<td><select name="arg6" size="1">
					<?=mk_option($newznab_cron_cfg['CRON_IMP'], "disable", "No");?>
					<?=mk_option($newznab_cron_cfg['CRON_IMP'], "enable", "Yes");?>
					</select></td>
				</tr>
	 			<tr>
					<td>Import Directory:</td>
					<td><input type="text" name="arg7" maxlength="60" value="<?=$newznab_cron_cfg['CRON_IMPDIR'];?>"></td>
				</tr>
	 			<tr>
					<td>Do Post processing:</td>
	       			<td><select name="arg8" size="1">
					<?=mk_option($newznab_cron_cfg['CRON_PP'], "disable", "No");?>
					<?=mk_option($newznab_cron_cfg['CRON_PP'], "enable", "Yes");?>
					</select></td>
				</tr>
	 			<tr>
					<td>Threaded update_binaries.php:</td>
	       			<td><select name="arg9" size="1">
					<?=mk_option($newznab_cron_cfg['CRON_THREAD'], "disable", "No");?>
					<?=mk_option($newznab_cron_cfg['CRON_THREAD'], "enable", "Yes");?>
					</select></td>
				</tr>
					<td></td>
					<td><input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</b$
				</tr>
			</table>
		</form>
	</div>
</div>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/newznab_extras/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.searchd start
/etc/rc.d/rc.newznab_cron start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/newznab_extras/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.searchd stop
/etc/rc.d/rc.newznab_cron stop
]]>
</INLINE>
</FILE>

</PLUGIN>
